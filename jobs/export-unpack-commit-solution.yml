jobs:
- job: ExportUnpackCommitSolution
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - powershell: |
      Write-Output "$env:AgentWorkFolder\$($env:SolutionName)_managed.zip"
    env:
      AgentWorkFolder: $(Agent.WorkFolder)

  # - powershell: |
  #     Set-Location $($env:BuildSourcesDirectory)
      
  #     $username = [uri]::EscapeDataString($env:GitHubServiceAccountUsername)
  #     $token = [uri]::EscapeDataString($env:GitHubServiceAccountToken)
  #     $remoteUrl = "$env:BuildRepositoryUri.git".Replace(
  #       "https://",
  #       "https://$($username):$($token)@")
  #     git remote set-url origin $remoteUrl

  #     git config user.email $env:GitHubServiceAccountUsername
  #     git config user.name "DevOps Service"

  #     git checkout $env:BuildSourceBranchName
  #   env:
  #     BuildSourcesDirectory: $(Build.SourcesDirectory)
  #     GitHubServiceAccountUsername: $(GitHubServiceAccount.Username)
  #     GitHubServiceAccountToken: $(GitHubServiceAccount.Token)
  #     BuildRepositoryUri: $(Build.Repository.Uri)
  #     BuildSourceBranchName: $(Build.SourceBranchName)
  #   displayName: "Switch git credentials"

  # - powershell: Install-Module Microsoft.Xrm.Data.Powershell -Scope CurrentUser -Force
  #   displayName: 'Install Microsoft.Xrm.Data.PowerShell'

  # - powershell: |
  #     $connection = Get-CrmConnection `
  #       -ConnectionString `
  #         ("AuthType = Office365;" + `
  #         "Username = $env:DynamicsServiceAccountUsername;" + `
  #         "Password = $env:DynamicsServiceAccountPassword;" + `
  #         "Url = https://$env:EnvironmentName.crm.dynamics.com")

  #     Export-CrmSolution `
  #       -conn $connection `
  #       -SolutionName $env:SolutionName `
  #       -SolutionZipFileName "$env:AgentWorkFolder\$env:SolutionName.zip".Replace("\", "/")
      
  #     Export-CrmSolution `
  #       -conn $connection `
  #       -SolutionName $env:SolutionName `
  #       -SolutionZipFileName "$env:AgentWorkFolder\$($env:SolutionName)_managed.zip".Replace("\", "/") `
  #       -Managed
  #   env:
  #     DynamicsServiceAccountUsername: $(DynamicsServiceAccount.Username)
  #     DynamicsServiceAccountPassword: $(DynamicsServiceAccount.Password)
  #     EnvironmentName: $(Environment.Name)
  #     SolutionName: $(Solution.Name)
  #     AgentWorkFolder: $(Agent.WorkFolder)
  #   displayName: 'Export solution'

  # - powershell: Remove-Item $env:SolutionPath -Recurse -Verbose
  #   env:
  #     SolutionPath: $(Solution.Path)
  #   displayName: 'Clear existing unpacked solution'

  # - template: ../steps/install-core-tools.yml

  # - powershell: |
  #     Start-Process $env:AgentWorkFolder/tools/CoreTools/SolutionPackager.exe `
  #       -ArgumentList `
  #         "/action: Extract", `
  #         "/zipfile: $env:AgentWorkFolder/$env:SolutionName.zip", `
  #         "/folder: $env:SolutionPath", `
  #         "/packagetype: Both" `
  #       -Wait `
  #       -NoNewWindow
  #   env:
  #     AgentWorkFolder: $(Agent.WorkFolder)
  #     SolutionName: $(Solution.Name)
  #     SolutionPath: $(Solution.Path)
  #   displayName: 'Unpack solution'

  # - powershell: |
  #     git add *
  #     git commit --author="$env:BuildRequestedFor <$env:BuildRequestedForEmail>" -m "Solution modification during build $($env:Build_BuildNumber)"
  #     git push --set-upstream origin master
  #   env:
  #     BuildRequestedForEmail: $(Build.RequestedForEmail)
  #     BuildRequestedFor: $(Build.RequestedFor)
  #   displayName: 'Commit solution changes'