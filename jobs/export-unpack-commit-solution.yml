jobs:
- job: ExportUnpackCommitSolution
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  # - template: ../steps/install-core-tools.yml

  - powershell: |
      Set-Location $($env:SRC_DIR)
      Write-Output "test" | Out-File "./new-file.txt"
      git add *
      git commit -m "Created a sample file"
      git push
    env:
      SRC_DIR: $(Build.SourcesDirectory)

  # - powershell: |
  #     git clone https://ContosoUniversity:$($env:DevOpsRepoToken)@dev.azure.com/MicrosoftIpDevOps/ContosoUniversity/_git/$env:SolutionName
  #   env:
  #     SolutionName: $(Solution.Name)
  #     DevOpsRepoToken: $(DevOpsRepoToken)
  #   displayName: 'Clone solution repository'

  # - powershell: Remove-Item $env:SolutionName/solution -Recurse -Verbose
  #   env:
  #     SolutionName: $(Solution.Name)
  #   displayName: 'Clear existing solution pack'

  # - script: md temp
  #   displayName: 'Create temp directory'

  # - powershell: |
  #     $connection = Get-CrmConnection `
  #       -ConnectionString `
  #         ("AuthType = Office365;" + `
  #         "Username = $env:ServiceAccountUserName;" + `
  #         "Password = $env:ServiceAccountPassword;" + `
  #         "Url = https://$env:EnvironmentName.crm.dynamics.com")

  #     Export-CrmSolution `
  #       -conn $connection `
  #       -SolutionName $($env:SolutionName) `
  #       -SolutionZipFileName "temp\$env:SolutionName.zip"
      
  #     Export-CrmSolution `
  #       -conn $connection `
  #       -SolutionName $($env:SolutionName) `
  #       -SolutionZipFileName "temp\$($env:SolutionName)_managed.zip" `
  #       -Managed
  #   env:
  #     EnvironmentName: $(Environment.Name)
  #     SolutionName: $(Solution.Name)
  #     ServiceAccountUserName: $(ServiceAccount.UserName)
  #     ServiceAccountPassword: $(ServiceAccount.Password)
  #   displayName: 'Export solution'

  # - powershell: |
  #     Start-Process tools/CoreTools/SolutionPackager.exe `
  #       -ArgumentList `
  #         "/action: Extract", `
  #         "/zipfile: temp/$env:SolutionName.zip", `
  #         "/folder: $env:SolutionName/solution", `
  #         "/packagetype: Both" `
  #       -Wait `
  #       -NoNewWindow
  #   env:
  #     SolutionName: $(Solution.Name)
  #   displayName: 'Unpack solution'

  # - powershell: |
  #     Set-Location $env:SolutionName
  #     git config user.email $env:ServiceAccountUserName
  #     git config user.name $env:ServiceAccountFullName
  #     git add *
  #     git commit -m "Update from build $($env:Build_BuildNumber)"
  #     git push --set-upstream origin master
  #   env:
  #     SolutionName: $(Solution.Name)
  #     ServiceAccountUserName: $(ServiceAccount.UserName)
  #     ServiceAccountFullName: $(ServiceAccount.FullName)
  #   displayName: 'Commit solution changes'